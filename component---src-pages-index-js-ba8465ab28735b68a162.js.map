{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Button/ButtonContent.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Button/ButtonGroup.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Button/ButtonOr.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Button/Button.js","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Segment/SegmentGroup.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Segment/Segment.js","webpack:///./src/components/Events.js","webpack:///./src/pages/index.js"],"names":["module","exports","TypeError","iter","Symbol","iterator","Object","prototype","toString","call","Array","from","arr","isArray","i","arr2","length","ButtonContent","props","children","className","content","hidden","visible","classes","rest","getUnhandledProps","ElementType","getElementType","createElement","isNil","handledProps","propTypes","ButtonGroup","attached","basic","buttons","color","compact","floated","fluid","icon","inverted","labeled","negative","positive","primary","secondary","size","toggle","vertical","widths","button","create","ButtonOr","text","_Component","Button","_getPrototypeOf2","_this","this","_len","arguments","args","_key","apply","concat","_this$props","label","_this$props2","disabled","tabIndex","ref","e","preventDefault","c","_this$props3","labelPosition","key","value","_this$props4","active","animated","circular","loading","role","baseClasses","hasIconClass","labeledClasses","wrapperClasses","computeElementType","computeTabIndex","buttonClasses","containerClasses","labelElement","Label","defaultProps","pointing","autoGenerateKey","onClick","handleClick","handleRef","Icon","hasChildren","undefined","as","arrayWithoutHoles","iterableToArray","nonIterableSpread","SegmentGroup","horizontal","piled","raised","stacked","Segment","clearing","padded","tertiary","textAlign","Group","Events","useEffect","script","document","src","async","body","appendChild","removeChild","style","background","class","data-artist-name","data-display-local-dates","data-display-past-dates","data-auto-style","data-text-color","data-link-color","data-background-color","data-display-limit","data-display-start-time","data-link-text-color","data-display-lineup","data-display-play-my-city","data-separator-color","IndexPage","margin","maxWidth","fullHeight","Divider","Container"],"mappings":"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","file":"component---src-pages-index-js-ba8465ab28735b68a162.js","sourcesContent":["function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * Used in some Button types, such as `animated`.\n */\n\nfunction ButtonContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      hidden = props.hidden,\n      visible = props.visible;\n  var classes = cx(useKeyOnly(visible, 'visible'), useKeyOnly(hidden, 'hidden'), 'content', className);\n  var rest = getUnhandledProps(ButtonContent, props);\n  var ElementType = getElementType(ButtonContent, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nButtonContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"hidden\", \"visible\"];\nButtonContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Initially hidden, visible on hover. */\n  hidden: PropTypes.bool,\n\n  /** Initially visible, hidden on hover. */\n  visible: PropTypes.bool\n} : {};\nexport default ButtonContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _map from \"lodash/map\";\nimport _isNil from \"lodash/isNil\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useValueAndKey, useWidthProp } from '../../lib';\nimport Button from './Button';\n/**\n * Buttons can be grouped.\n */\n\nfunction ButtonGroup(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      buttons = props.buttons,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      compact = props.compact,\n      content = props.content,\n      floated = props.floated,\n      fluid = props.fluid,\n      icon = props.icon,\n      inverted = props.inverted,\n      labeled = props.labeled,\n      negative = props.negative,\n      positive = props.positive,\n      primary = props.primary,\n      secondary = props.secondary,\n      size = props.size,\n      toggle = props.toggle,\n      vertical = props.vertical,\n      widths = props.widths;\n  var classes = cx('ui', color, size, useKeyOnly(basic, 'basic'), useKeyOnly(compact, 'compact'), useKeyOnly(fluid, 'fluid'), useKeyOnly(icon, 'icon'), useKeyOnly(inverted, 'inverted'), useKeyOnly(labeled, 'labeled'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(primary, 'primary'), useKeyOnly(secondary, 'secondary'), useKeyOnly(toggle, 'toggle'), useKeyOnly(vertical, 'vertical'), useKeyOrValueAndKey(attached, 'attached'), useValueAndKey(floated, 'floated'), useWidthProp(widths), 'buttons', className);\n  var rest = getUnhandledProps(ButtonGroup, props);\n  var ElementType = getElementType(ButtonGroup, props);\n\n  if (_isNil(buttons)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), childrenUtils.isNil(children) ? content : children);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), _map(buttons, function (button) {\n    return Button.create(button);\n  }));\n}\n\nButtonGroup.handledProps = [\"as\", \"attached\", \"basic\", \"buttons\", \"children\", \"className\", \"color\", \"compact\", \"content\", \"floated\", \"fluid\", \"icon\", \"inverted\", \"labeled\", \"negative\", \"positive\", \"primary\", \"secondary\", \"size\", \"toggle\", \"vertical\", \"widths\"];\nButtonGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Groups can be attached to other content. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['left', 'right', 'top', 'bottom'])]),\n\n  /** Groups can be less pronounced. */\n  basic: PropTypes.bool,\n\n  /** Array of shorthand Button values. */\n  buttons: customPropTypes.collectionShorthand,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Groups can have a shared color. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Groups can reduce their padding to fit into tighter spaces. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Groups can be aligned to the left or right of its container. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** Groups can take the width of their container. */\n  fluid: PropTypes.bool,\n\n  /** Groups can be formatted as icons. */\n  icon: PropTypes.bool,\n\n  /** Groups can be formatted to appear on dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Groups can be formatted as labeled icon buttons. */\n  labeled: PropTypes.bool,\n\n  /** Groups can hint towards a negative consequence. */\n  negative: PropTypes.bool,\n\n  /** Groups can hint towards a positive consequence. */\n  positive: PropTypes.bool,\n\n  /** Groups can be formatted to show different levels of emphasis. */\n  primary: PropTypes.bool,\n\n  /** Groups can be formatted to show different levels of emphasis. */\n  secondary: PropTypes.bool,\n\n  /** Groups can have different sizes. */\n  size: PropTypes.oneOf(SUI.SIZES),\n\n  /** Groups can be formatted to toggle on and off. */\n  toggle: PropTypes.bool,\n\n  /** Groups can be formatted to appear vertically. */\n  vertical: PropTypes.bool,\n\n  /** Groups can have their widths divided evenly. */\n  widths: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nexport default ButtonGroup;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * Button groups can contain conditionals.\n */\n\nfunction ButtonOr(props) {\n  var className = props.className,\n      text = props.text;\n  var classes = cx('or', className);\n  var rest = getUnhandledProps(ButtonOr, props);\n  var ElementType = getElementType(ButtonOr, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes,\n    \"data-text\": text\n  }));\n}\n\nButtonOr.handledProps = [\"as\", \"className\", \"text\"];\nButtonOr.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Or buttons can have their text localized, or adjusted by using the text prop. */\n  text: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : {};\nexport default ButtonOr;","import \"core-js/modules/es6.array.some\";\nimport \"core-js/modules/es6.array.is-array\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _invoke from \"lodash/invoke\";\nimport _isNil from \"lodash/isNil\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useValueAndKey } from '../../lib';\nimport Icon from '../Icon/Icon';\nimport Label from '../Label/Label';\nimport ButtonContent from './ButtonContent';\nimport ButtonGroup from './ButtonGroup';\nimport ButtonOr from './ButtonOr';\n/**\n * A Button indicates a possible user action.\n * @see Form\n * @see Icon\n * @see Label\n */\n\nvar Button =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Button, _Component);\n\n  function Button() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Button);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Button)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"computeElementType\", function () {\n      var _this$props = _this.props,\n          attached = _this$props.attached,\n          label = _this$props.label;\n      if (!_isNil(attached) || !_isNil(label)) return 'div';\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"computeTabIndex\", function (ElementType) {\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          tabIndex = _this$props2.tabIndex;\n      if (!_isNil(tabIndex)) return tabIndex;\n      if (disabled) return -1;\n      if (ElementType === 'div') return 0;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"focus\", function () {\n      return _invoke(_this.ref, 'focus');\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleClick\", function (e) {\n      var disabled = _this.props.disabled;\n\n      if (disabled) {\n        e.preventDefault();\n        return;\n      }\n\n      _invoke(_this.props, 'onClick', e, _this.props);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleRef\", function (c) {\n      return _this.ref = c;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"hasIconClass\", function () {\n      var _this$props3 = _this.props,\n          labelPosition = _this$props3.labelPosition,\n          children = _this$props3.children,\n          content = _this$props3.content,\n          icon = _this$props3.icon;\n      if (icon === true) return true;\n      return icon && (labelPosition || childrenUtils.isNil(children) && _isNil(content));\n    });\n\n    return _this;\n  }\n\n  _createClass(Button, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          active = _this$props4.active,\n          animated = _this$props4.animated,\n          attached = _this$props4.attached,\n          basic = _this$props4.basic,\n          children = _this$props4.children,\n          circular = _this$props4.circular,\n          className = _this$props4.className,\n          color = _this$props4.color,\n          compact = _this$props4.compact,\n          content = _this$props4.content,\n          disabled = _this$props4.disabled,\n          floated = _this$props4.floated,\n          fluid = _this$props4.fluid,\n          icon = _this$props4.icon,\n          inverted = _this$props4.inverted,\n          label = _this$props4.label,\n          labelPosition = _this$props4.labelPosition,\n          loading = _this$props4.loading,\n          negative = _this$props4.negative,\n          positive = _this$props4.positive,\n          primary = _this$props4.primary,\n          secondary = _this$props4.secondary,\n          role = _this$props4.role,\n          size = _this$props4.size,\n          toggle = _this$props4.toggle;\n      var baseClasses = cx(color, size, useKeyOnly(active, 'active'), useKeyOnly(basic, 'basic'), useKeyOnly(circular, 'circular'), useKeyOnly(compact, 'compact'), useKeyOnly(fluid, 'fluid'), useKeyOnly(this.hasIconClass(), 'icon'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(primary, 'primary'), useKeyOnly(secondary, 'secondary'), useKeyOnly(toggle, 'toggle'), useKeyOrValueAndKey(animated, 'animated'), useKeyOrValueAndKey(attached, 'attached'));\n      var labeledClasses = cx(useKeyOrValueAndKey(labelPosition || !!label, 'labeled'));\n      var wrapperClasses = cx(useKeyOnly(disabled, 'disabled'), useValueAndKey(floated, 'floated'));\n      var rest = getUnhandledProps(Button, this.props);\n      var ElementType = getElementType(Button, this.props, this.computeElementType);\n      var tabIndex = this.computeTabIndex(ElementType);\n\n      if (!_isNil(label)) {\n        var buttonClasses = cx('ui', baseClasses, 'button', className);\n        var containerClasses = cx('ui', labeledClasses, 'button', className, wrapperClasses);\n        var labelElement = Label.create(label, {\n          defaultProps: {\n            basic: true,\n            pointing: labelPosition === 'left' ? 'right' : 'left'\n          },\n          autoGenerateKey: false\n        });\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: containerClasses,\n          onClick: this.handleClick\n        }), labelPosition === 'left' && labelElement, React.createElement(\"button\", {\n          className: buttonClasses,\n          disabled: disabled,\n          ref: this.handleRef,\n          tabIndex: tabIndex\n        }, Icon.create(icon, {\n          autoGenerateKey: false\n        }), \" \", content), (labelPosition === 'right' || !labelPosition) && labelElement);\n      }\n\n      var classes = cx('ui', baseClasses, wrapperClasses, labeledClasses, 'button', className);\n      var hasChildren = !childrenUtils.isNil(children);\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        disabled: disabled && ElementType === 'button' || undefined,\n        onClick: this.handleClick,\n        ref: this.handleRef,\n        role: role,\n        tabIndex: tabIndex\n      }), hasChildren && children, !hasChildren && Icon.create(icon, {\n        autoGenerateKey: false\n      }), !hasChildren && content);\n    }\n  }]);\n\n  return Button;\n}(Component);\n\n_defineProperty(Button, \"defaultProps\", {\n  as: 'button',\n  role: 'button'\n});\n\n_defineProperty(Button, \"Content\", ButtonContent);\n\n_defineProperty(Button, \"Group\", ButtonGroup);\n\n_defineProperty(Button, \"Or\", ButtonOr);\n\n_defineProperty(Button, \"handledProps\", [\"active\", \"animated\", \"as\", \"attached\", \"basic\", \"children\", \"circular\", \"className\", \"color\", \"compact\", \"content\", \"disabled\", \"floated\", \"fluid\", \"icon\", \"inverted\", \"label\", \"labelPosition\", \"loading\", \"negative\", \"onClick\", \"positive\", \"primary\", \"role\", \"secondary\", \"size\", \"tabIndex\", \"toggle\"]);\n\nButton.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A button can show it is currently the active user selection. */\n  active: PropTypes.bool,\n\n  /** A button can animate to show hidden content. */\n  animated: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['fade', 'vertical'])]),\n\n  /** A button can be attached to other content. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['left', 'right', 'top', 'bottom'])]),\n\n  /** A basic button is less pronounced. */\n  basic: PropTypes.bool,\n\n  /** Primary content. */\n  children: customPropTypes.every([PropTypes.node, customPropTypes.disallow(['label']), customPropTypes.givenProps({\n    icon: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.object.isRequired, PropTypes.element.isRequired])\n  }, customPropTypes.disallow(['icon']))]),\n\n  /** A button can be circular. */\n  circular: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A button can have different colors */\n  color: PropTypes.oneOf(_toConsumableArray(SUI.COLORS).concat(['facebook', 'google plus', 'instagram', 'linkedin', 'twitter', 'vk', 'youtube'])),\n\n  /** A button can reduce its padding to fit into tighter spaces. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A button can show it is currently unable to be interacted with. */\n  disabled: PropTypes.bool,\n\n  /** A button can be aligned to the left or right of its container. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A button can take the width of its container. */\n  fluid: PropTypes.bool,\n\n  /** Add an Icon by name, props object, or pass an <Icon />. */\n  icon: customPropTypes.some([PropTypes.bool, PropTypes.string, PropTypes.object, PropTypes.element]),\n\n  /** A button can be formatted to appear on dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Add a Label by text, props object, or pass a <Label />. */\n  label: customPropTypes.some([PropTypes.string, PropTypes.object, PropTypes.element]),\n\n  /** A labeled button can format a Label or Icon to appear on the left or right. */\n  labelPosition: PropTypes.oneOf(['right', 'left']),\n\n  /** A button can show a loading indicator. */\n  loading: PropTypes.bool,\n\n  /** A button can hint towards a negative consequence. */\n  negative: PropTypes.bool,\n\n  /**\n   * Called after user's click.\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: PropTypes.func,\n\n  /** A button can hint towards a positive consequence. */\n  positive: PropTypes.bool,\n\n  /** A button can be formatted to show different levels of emphasis. */\n  primary: PropTypes.bool,\n\n  /** The role of the HTML element. */\n  role: PropTypes.string,\n\n  /** A button can be formatted to show different levels of emphasis. */\n  secondary: PropTypes.bool,\n\n  /** A button can have different sizes. */\n  size: PropTypes.oneOf(SUI.SIZES),\n\n  /** A button can receive focus. */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** A button can be formatted to toggle on and off. */\n  toggle: PropTypes.bool\n} : {};\nButton.create = createShorthandFactory(Button, function (value) {\n  return {\n    content: value\n  };\n});\nexport default Button;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\n/**\n * A group of segments can be formatted to appear together.\n */\n\nfunction SegmentGroup(props) {\n  var children = props.children,\n      className = props.className,\n      compact = props.compact,\n      content = props.content,\n      horizontal = props.horizontal,\n      piled = props.piled,\n      raised = props.raised,\n      size = props.size,\n      stacked = props.stacked;\n  var classes = cx('ui', size, useKeyOnly(compact, 'compact'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(piled, 'piled'), useKeyOnly(raised, 'raised'), useKeyOnly(stacked, 'stacked'), 'segments', className);\n  var rest = getUnhandledProps(SegmentGroup, props);\n  var ElementType = getElementType(SegmentGroup, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegmentGroup.handledProps = [\"as\", \"children\", \"className\", \"compact\", \"content\", \"horizontal\", \"piled\", \"raised\", \"size\", \"stacked\"];\nSegmentGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A segment may take up only as much space as is necessary. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Formats content to be aligned horizontally. */\n  horizontal: PropTypes.bool,\n\n  /** Formatted to look like a pile of pages. */\n  piled: PropTypes.bool,\n\n  /** A segment group may be formatted to raise above the page. */\n  raised: PropTypes.bool,\n\n  /** A segment group can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** Formatted to show it contains multiple pages. */\n  stacked: PropTypes.bool\n} : {};\nexport default SegmentGroup;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useTextAlignProp, useValueAndKey } from '../../lib';\nimport SegmentGroup from './SegmentGroup';\n/**\n * A segment is used to create a grouping of related content.\n */\n\nfunction Segment(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      children = props.children,\n      circular = props.circular,\n      className = props.className,\n      clearing = props.clearing,\n      color = props.color,\n      compact = props.compact,\n      content = props.content,\n      disabled = props.disabled,\n      floated = props.floated,\n      inverted = props.inverted,\n      loading = props.loading,\n      padded = props.padded,\n      piled = props.piled,\n      raised = props.raised,\n      secondary = props.secondary,\n      size = props.size,\n      stacked = props.stacked,\n      tertiary = props.tertiary,\n      textAlign = props.textAlign,\n      vertical = props.vertical;\n  var classes = cx('ui', color, size, useKeyOnly(basic, 'basic'), useKeyOnly(circular, 'circular'), useKeyOnly(clearing, 'clearing'), useKeyOnly(compact, 'compact'), useKeyOnly(disabled, 'disabled'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(piled, 'piled'), useKeyOnly(raised, 'raised'), useKeyOnly(secondary, 'secondary'), useKeyOnly(stacked, 'stacked'), useKeyOnly(tertiary, 'tertiary'), useKeyOnly(vertical, 'vertical'), useKeyOrValueAndKey(attached, 'attached'), useKeyOrValueAndKey(padded, 'padded'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), 'segment', className);\n  var rest = getUnhandledProps(Segment, props);\n  var ElementType = getElementType(Segment, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegment.handledProps = [\"as\", \"attached\", \"basic\", \"children\", \"circular\", \"className\", \"clearing\", \"color\", \"compact\", \"content\", \"disabled\", \"floated\", \"inverted\", \"loading\", \"padded\", \"piled\", \"raised\", \"secondary\", \"size\", \"stacked\", \"tertiary\", \"textAlign\", \"vertical\"];\nSegment.Group = SegmentGroup;\nSegment.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Attach segment to other content, like a header. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['top', 'bottom'])]),\n\n  /** A basic segment has no special formatting. */\n  basic: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** A segment can be circular. */\n  circular: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A segment can clear floated content. */\n  clearing: PropTypes.bool,\n\n  /** Segment can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A segment may take up only as much space as is necessary. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A segment may show its content is disabled. */\n  disabled: PropTypes.bool,\n\n  /** Segment content can be floated to the left or right. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A segment can have its colors inverted for contrast. */\n  inverted: PropTypes.bool,\n\n  /** A segment may show its content is being loaded. */\n  loading: PropTypes.bool,\n\n  /** A segment can increase its padding. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** Formatted to look like a pile of pages. */\n  piled: PropTypes.bool,\n\n  /** A segment may be formatted to raise above the page. */\n  raised: PropTypes.bool,\n\n  /** A segment can be formatted to appear less noticeable. */\n  secondary: PropTypes.bool,\n\n  /** A segment can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** Formatted to show it contains multiple pages. */\n  stacked: PropTypes.bool,\n\n  /** A segment can be formatted to appear even less noticeable. */\n  tertiary: PropTypes.bool,\n\n  /** Formats content to be aligned as part of a vertical group. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** Formats content to be aligned vertically. */\n  vertical: PropTypes.bool\n} : {};\nexport default Segment;","import React, { useEffect } from 'react'\nimport { Segment } from 'semantic-ui-react'\n\nfunction Events() {\n  useEffect(() => {\n    const script = document.createElement('script')\n\n    script.src = 'https://widget.bandsintown.com/main.min.js'\n    script.async = true\n\n    document.body.appendChild(script)\n\n    return () => {\n      document.body.removeChild(script)\n    }\n  }, [])\n\n  return (\n    <>\n      <h1>Events</h1>\n      <Segment style={{ background: '#372B35' }}>\n        <a\n          class=\"bit-widget-initializer\"\n          data-artist-name=\"Louis Cole\"\n          data-display-local-dates=\"false\"\n          data-display-past-dates=\"true\"\n          data-auto-style=\"false\"\n          data-text-color=\"#FFFFFF\"\n          //   data-link-color=\"#ffcc51\"\n          data-link-color=\"#EAAE00\"\n          data-background-color=\"rgba(0,0,0,0)\"\n          data-display-limit=\"15\"\n          data-display-start-time=\"false\"\n          data-link-text-color=\"#FFFFFF\"\n          data-display-lineup=\"false\"\n          data-display-play-my-city=\"true\"\n          data-separator-color=\"rgba(124,124,124,0.25)\"\n        ></a>\n      </Segment>\n    </>\n  )\n}\nexport default Events\n","import React, { useEffect } from 'react'\n\nimport {\n  Button,\n  Container,\n  Segment,\n  Divider,\n  Icon,\n  Search,\n  Grid,\n  Header,\n} from 'semantic-ui-react'\nimport Layout from '../components/layout'\n\nimport {\n  Jumbotron,\n  JumboMessage,\n  JumboHeader,\n} from '../components/styledComponents'\nimport Events from '../components/Events'\n\nconst IndexPage = () => (\n  <>\n    <Layout>\n      <div style={{ margin: '0 auto', maxWidth: '100rem' }}>\n        <Jumbotron fullHeight src={`images/clarinets.jpg`}>\n          <JumboMessage>\n            <JumboHeader size=\"huge\" as={'h1'} inverted>\n              Sydney Clarinet Choir\n            </JumboHeader>\n          </JumboMessage>\n        </Jumbotron>\n        <Divider hidden />\n      </div>\n      <Container>\n        <h1>News</h1>\n        <p>coming soon...</p>\n\n        <Jumbotron src=\"https://st4.depositphotos.com/1020618/27307/i/450/depositphotos_273076392-stock-photo-clarinet-during-a-classical-concert.jpg\">\n          <JumboMessage>\n            <Button size=\"massive\">Play with SCC</Button>\n          </JumboMessage>\n        </Jumbotron>\n\n        <Events />\n\n        <Divider hidden />\n\n        {/* <Segment textAlign=\"center\">\n          <Button>Play with SCC</Button>\n        </Segment> */}\n        <Divider hidden />\n\n        <Jumbotron src=\"https://s3.eu-central-1.amazonaws.com/heek-media/images/industries/music/music-woods-instruments/cover-2.jpg\">\n          <JumboMessage>\n            <Button color=\"yellow\" size=\"massive\">\n              Book SCC\n            </Button>\n          </JumboMessage>\n        </Jumbotron>\n\n        <Divider hidden />\n      </Container>\n    </Layout>\n    {/* •\tGenerous display of name in full and logo\n•\tNews (copy to be supplied, but we envisage info like testimonials, clarinet news, member news, guest artists, links to friends and associates including sponsor retailers)\n•\tEvents\no\tupcoming concerts\no\tpast concerts\n•\tBook SCC\n•\tPlay with SCC */}\n  </>\n)\n\nexport default IndexPage\n"],"sourceRoot":""}